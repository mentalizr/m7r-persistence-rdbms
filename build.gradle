import java.nio.file.Paths

plugins {
    id 'java-library'
}

group 'org.mentalizr'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'src/main/generated'
        }
    }
}

task barnacle(type: Exec) {
//    println System.getenv("PATH")

    inputs.dir("$rootDir/src/main/java/org/mentalizr/persistence/rdbms/barnacle/vof")
    inputs.file("$rootDir/src/main/resources/barnacle.conf")
    outputs.dir("$rootDir/src/main/generated")
    outputs.dir("$buildDir/sql")

    mkdir "$buildDir/sql"

    commandLine "barnacle", "--verbose", "--configfile", "$projectDir/src/main/resources/barnacle.conf", "generate"
}

dependencies {

    implementation 'org.mentalizr:m7r-commons:0.0.1-SNAPSHOT'

    implementation 'com.github.arthurpicht:utils-core:1.13.0'

    implementation 'ch.qos.logback:logback-classic:1.4.7'
    api 'de.mkammerer:argon2-jvm:2.11'

    implementation 'com.github.arthurpicht:Barnacle:master-SNAPSHOT'
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.4.3'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
}

test {
    useJUnitPlatform()
}

task copyBarnacleConf(type: Copy) {
    def barnacleConf = Paths.get("$rootDir").resolve("../../infra/m7r-config/common/barnacle.conf").normalize().toFile()
    if (!barnacleConf.exists()) throw new GradleException(barnacleConf.absolutePath + " not found.");

    inputs.file(barnacleConf)
    outputs.file("$rootDir/src/main/resources/barnacle.conf")

    from file(barnacleConf)
    into "$rootDir/src/main/resources"
}

clean {
    delete "$rootDir/src/main/generated/org"
    delete "$rootDir/src/main/resources/barnacle.conf"
}

barnacle.dependsOn(copyBarnacleConf)
jar.dependsOn(barnacle)
tasks.findByName('jar').mustRunAfter('barnacle')
tasks.findByName('barnacle').mustRunAfter('copyBarnacleConf')
